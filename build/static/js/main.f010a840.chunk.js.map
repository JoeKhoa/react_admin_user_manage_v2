{"version":3,"sources":["Assets/admin_soccer.png","Components/Header.js","Components/EditUser.js","Components/Search.js","Components/TableDataRow.js","Components/TableData.js","Components/AddUser.js","Components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","Component","EditUser","props","ischange","event","name","target","value","setState","clickSave","editedObject","id","state","phone","permission","changeEditUserStatus","getEditUserData","editUserObject","parseInt","defaultValue","this","type","onChange","placeholder","aria-describedby","required","onClick","Search","data","getEditedUserDataFromApp","isChangeSearchText","getSeachedText","hideClicked","showFormFromApp","ShowAddBtn","showBtn","showEditForm","EditUserStatus","searchInput","TableDataRow","editBtn","editFuncFromTableData","stt","userName","permissionDefine","userId","deleteBtn","TableData","mappingDataUser","map","key","editData","editFuncFromApp","idUser","deleteUser","AddUser","isChange","showForm","style","maxWidth","getNewUser","status","App","EditStatus","item","uuidv1","items","undefined","push","console","log","localStorage","setItem","JSON","stringify","text","searchedText","changeAppShowForm","willEditData","EditedData","forEach","updatedData","tempData","filter","JsonUserData","editedData","getItem","parse","SearchedDataArr","indexOf","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f010a840.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/admin_soccer.01ab520a.png\";","import React, { Component } from 'react';\r\nimport logo from './../Assets/admin_soccer.png';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n    \r\n            <div className=\"jumbotron\">\r\n                <div className=\"container text-center \">\r\n                    <img src={logo} alt=\"\"/>\r\n                </div>\r\n                <div className=\"container text-center \">\r\n                <h1 className=\"display-4\">React App Manage User</h1>\r\n                {/* <p className=\"lead\">json data</p> */}\r\n                <hr className=\"my-2\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass EditUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name:this.props.editUserObject.name,\r\n            phone:this.props.editUserObject.phone,\r\n            id:this.props.editUserObject.id,\r\n            permission: parseInt(this.props.editUserObject.permission,10)\r\n        }\r\n\r\n    }\r\n\r\n    ischange  = (event) => {\r\n        const name = event.target.name\r\n        const value = event.target.value\r\n        this.setState({ [name]:value});        \r\n    }\r\n    \r\n    clickSave = () => {\r\n        var editedObject = {}\r\n        editedObject.id = this.state.id \r\n        editedObject.name = this.state.name\r\n        editedObject.phone = this.state.phone\r\n        editedObject.permission = this.state.permission \r\n        \r\n        // console.log('EditUser.js: ',editedObject);\r\n        \r\n        this.props.changeEditUserStatus()\r\n        this.props.getEditUserData(editedObject)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"col-12 p-0\">\r\n                        <form >\r\n                            <div className=\"card border-default mb-3 mt-2 bg-warning\" >                        \r\n                            <div className=\"card-header text-white text-center\">Edit user information</div>\r\n                            <div className=\"card-body text-primary\">\r\n                            <div className=\"form-group\">                        \r\n                            <input defaultValue={this.props.editUserObject.name}  name = 'name' type=\"text\" \r\n                                   onChange = {  (event) => this.ischange(event) }\r\n                             className=\"form-control\" placeholder=\"username\" aria-describedby=\"helpId\" />\r\n                            </div>\r\n                            <div className=\"form-group\">                        \r\n                            <input   defaultValue={this.props.editUserObject.phone}  name = 'phone'  type=\"text\"\r\n                                     onChange = {  (event) => this.ischange(event) }\r\n                              className=\"form-control\" placeholder=\"phone\" aria-describedby=\"helpId\" />\r\n                            </div>\r\n                            <div className=\"form-group\">                        \r\n                            <select  defaultValue={this.props.editUserObject.permission}\r\n                                     onChange = {  (event) => this.ischange(event) }\r\n                                name = 'permission'  className=\"custom-select\" required>\r\n                                {/* <option value={0} >Choose Authoriztion</option> */}\r\n                                <option value={1}>Amin</option>\r\n                                <option value={2}>Moderator</option>\r\n                                <option value={3}>Normal</option>\r\n                            </select>                      \r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                            <input value =\"Save\"  onClick = {() => this.clickSave()} type ='reset' className=\"btn btn-block btn-danger\" />\r\n                                \r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditUser;","import React, { Component } from 'react';\r\nimport EditUser from './EditUser';\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ShowAddBtn : true,\r\n        }\r\n\r\n    }\r\n\r\n    // get edit user data from table row\r\n    getEditUserData  = (data) => {\r\n        this.props.getEditedUserDataFromApp(data)\r\n    }\r\n\r\n    isChangeSearchText = (event)=> {\r\n        var value = event.target.value\r\n        var name = event.target.name\r\n        // console.log(value);\r\n        this.setState({ [name]:value });\r\n        this.props.getSeachedText(value)   \r\n    }\r\n\r\n    hideClicked = (event) =>{\r\n        this.props.showFormFromApp();\r\n        this.setState({\r\n            ShowAddBtn : !this.state.ShowAddBtn\r\n        });\r\n    }\r\n\r\n    showBtn = () => {\r\n        if( this.state.ShowAddBtn === true){\r\n            return <div onClick = { (event) => this.hideClicked(event) } className=\"btn btn-block btn-outline-primary\">Add new</div>\r\n        }else {\r\n            return <div onClick = { (event) => this.hideClicked(event) }  className=\"btn btn-block btn-outline-info\">Close </div>\r\n\r\n        }\r\n    }\r\n\r\n    showEditForm  = () => {\r\n        // console.log(this.props.EditUserStatus);\r\n        if( this.props.EditUserStatus === true ){\r\n            return <EditUser changeEditUserStatus = {() => this.props.changeEditUserStatus()}\r\n                        editUserObject = {this.props.editUserObject}\r\n                        getEditUserData = { (data) => this.getEditUserData(data)}\r\n                    />\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"col-12\">\r\n\r\n                {this.showEditForm()}\r\n\r\n                <div className=\"col-12 p-0\">\r\n                    <div className=\"form-group mb-3\">\r\n                        <div className=\"btn btn-group p-0 col-12\">\r\n                            <input type=\"text\" className=\"form-control\" name = 'searchInput'\r\n                            onChange = {(event) => this.isChangeSearchText(event) }\r\n                             aria-describedby=\"helpId\"  />\r\n                            <div className=\"btn btn-info\" onClick = { (data) => this.props.getSeachedText(this.state.searchInput) } >Search</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 p-0\">\r\n                    {this.showBtn()}\r\n                </div>\r\n                <div className=\"col-12 p-0\">\r\n                    <hr className=\"m-4\" />\r\n                </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\n\r\nclass TableDataRow extends Component {\r\n    // change number to permission text Admin/Moderator/Normal\r\n    permissionDefine(){\r\n        if (this.props.permission === 1){\r\n            return 'Admin'\r\n        }else if(this.props.permission === 2){\r\n            return 'Moderator'\r\n        }else{\r\n            return 'Normal'\r\n        }\r\n\r\n    }\r\n    \r\n    //\r\n    editBtn  = () => {\r\n        this.props.editFuncFromTableData()\r\n        this.props.changeEditUserStatus()\r\n    }\r\n\r\n    render() {\r\n    \r\n        return (\r\n                <tr>\r\n                <td>{this.props.stt}</td>\r\n                <td>{this.props.userName}</td>\r\n                <td>{this.props.phone}</td>\r\n                <td>{this.permissionDefine()}</td>\r\n                <td>\r\n                    <div className=\"btn-group\">\r\n                    <div className=\"btn btn-warning\" onClick ={ () => this.editBtn()} >\r\n                        <i className=\"fa fa-edit\" > Edit </i>\r\n                    </div>\r\n                    <div className=\"btn btn-danger\" onClick = { (userId) => this.props.deleteBtn(this.props.userId)}>\r\n                        <i className=\"fa fa-edit\"> Delete </i>\r\n                    </div>\r\n                    </div>\r\n                </td>\r\n                </tr>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableDataRow;","import React, { Component } from 'react';\r\nimport TableDataRow from './TableDataRow'\r\n\r\nclass TableData extends Component {\r\n    \r\n    // send data to TableDataRow\r\n    mappingDataUser = () => this.props.data.map( (value,key) =>(\r\n            <TableDataRow   userId = {value.id}\r\n            userName = {value.name} \r\n            key = {key}\r\n            stt = {key+1}\r\n            phone = {value.phone}\r\n            permission = {value.permission}\r\n            editFuncFromTableData = {  (editData) => this.props.editFuncFromApp(value) }\r\n            changeEditUserStatus = {() => this.props.changeEditUserStatus()}\r\n            deleteBtn = { (idUser) => this.props.deleteUser(idUser)}\r\n            /> )                                \r\n         )\r\n         \r\n    // get Id from table_row to remove  Need it ?\r\n    // deleteBtn  = (userId) => {\r\n    //     this.props.deleteBtn(userId)\r\n    // }\r\n\r\n    render() {\r\n        // console.log(this.props.data);\r\n        return (\r\n                <div className=\"col\">\r\n                        <table className=\"table table-striped table-inverse table-{1:striped|sm|bordered|hover|inverse}\">\r\n                            <thead className=\"thead-inverse\">\r\n                                <tr>\r\n                                <th>Order</th>\r\n                                <th>Name</th>\r\n                                <th>Phone</th>\r\n                                <th>Authorization</th>\r\n                                <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.mappingDataUser()}\r\n                            </tbody>\r\n                            \r\n                        </table>\r\n                </div>\r\n                    \r\n      );\r\n    }\r\n}\r\n\r\nexport default TableData;","import React, { Component } from 'react';\r\n\r\nclass AddUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            status : false,\r\n            permission:1,\r\n            // item : '',\r\n\r\n        }\r\n    }\r\n\r\n    isChange  = (data) => {\r\n        const name = data.target.name\r\n        const value = data.target.value\r\n        // console.log(name +' : '+value);\r\n        this.setState({\r\n            [name]:value\r\n        });\r\n\r\n    }\r\n\r\n    showForm = ()=> {\r\n        // console.log(this.state);\r\n        if(this.props.showForm === true){\r\n            return (\r\n                <div className=\"col\">\r\n                    <form >\r\n                              <div className=\"card border-primary mb-3 mt-2\" style={{maxWidth: '18rem'}}>                        \r\n                        <div className=\"card-header\">Add new</div>\r\n                        <div className=\"card-body text-primary\">\r\n                        <div className=\"form-group\">                        \r\n                        <input onChange = {(event) => {this.isChange(event)}} name = 'name' type=\"text\"  className=\"form-control\" placeholder=\"username\" aria-describedby=\"helpId\" />\r\n                        </div>\r\n                        <div className=\"form-group\">                        \r\n                        <input onChange = {(event) => {this.isChange(event)}}  name = 'phone'  type=\"text\"  className=\"form-control\" placeholder=\"phone\" aria-describedby=\"helpId\" />\r\n                        </div>\r\n                        <div className=\"form-group\">                        \r\n                        <select onChange = {(event) => {this.isChange(event)}}   name = 'permission'  className=\"custom-select\" required>\r\n                            {/* <option value={0} >Choose Authoriztion</option> */}\r\n                            <option value={1}>Amin</option>\r\n                            <option value={2}>Moderator</option>\r\n                            <option value={3}>Normal</option>\r\n                        </select>                      \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <input value =\"Add new\"  type ='reset' className=\"btn btn-block btn-primary\" \r\n                        onClick = { (data) => this.props.getNewUser(this.state.name,this.state.phone,this.state.permission)}/>\r\n                            \r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                )\r\n        }else{\r\n            return false\r\n        }        \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n                <div>                    \r\n                    { this.showForm()}\r\n                </div>\r\n                \r\n        );\r\n    }\r\n}\r\n\r\nexport default AddUser;","import React,{ Component} from 'react';\nimport './../App.css';\nimport Header from './Header';\nimport Search from './Search';\nimport TableData from './TableData';\nimport AddUser from './AddUser';\nimport JsonUserData from './data.json'\nimport { v1 as uuidv1 } from 'uuid';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showForm : false,\n      data : JsonUserData,\n      searchedText : '',\n      EditStatus : false,\n      editUserObject : {},\n      editedData: {}\n    };\n  \n  }\n  \n  \n  componentWillMount() {\n    if ( localStorage.getItem('dataUser') === null ){ \n      localStorage.setItem(\"dataUser\", JSON.stringify(JsonUserData))      \n    }else {\n      var tempData = JSON.parse(localStorage.getItem('dataUser'))\n      this.setState({ data : tempData }); \n    }\n  }\n  \n\n\n  // to show-hide edit user form\n  changeEditUserStatus  = () => {\n    this.setState({\n      EditStatus : !this.state.EditStatus\n    });\n  }\n\n  // to get created new user data\n  getNewUser  = (name,phone,permission) => {\n      var item  = {}\n      item.id = uuidv1()\n      item.name = name\n      item.phone = phone\n      item.permission = permission\n      // console.log('item: ',item);\n      var items = this.state.data\n      if ( item.name != null ||  items.name != undefined){\n        items.push(item)\n        this.setState({\n          data : items\n        })\n        console.log(this.state.data);\n        localStorage.setItem(\"dataUser\",JSON.stringify(items))\n        // item.name = null\n      }else{\n        return false\n      }\n\n\n    }\n\n  // to get searched text\n  getSeachedText = (text)=> {\n    this.setState({\n      searchedText : text\n    });\n  }\n  \n  // to show-hide the created new user form\n  changeAppShowForm = () => { \n      this.setState({\n        showForm : !this.state.showForm\n      });\n  }\n\n  // to get data from line contained edit-button, Components : App->TableData->TableDataRow\n  editFuncFromApp = (willEditData) => {\n     this.setState({\n      editUserObject : willEditData\n     });\n  }\n\n  getEditedUserDataFromApp = (EditedData) => {\n    EditedData.permission = parseInt(EditedData.permission,10)  // change to Int\n      this.state.data.forEach( (value,key) =>{\n          if ( value.id === EditedData.id ){            \n            const updatedData  = this.state.data\n            updatedData[key] = EditedData\n            localStorage.setItem(\"dataUser\",JSON.stringify(updatedData))\n            this.setState({\n              data:updatedData\n            });\n\n          }\n      });\n  }\n\n  // get Id from table to remove\n  deleteUser  = (userId) => {\n    var tempData = this.state.data\n    tempData  = tempData.filter(item => item.id !== userId)\n    this.setState({ data:tempData });\n    localStorage.setItem(\"dataUser\",JSON.stringify(tempData))\n\n  }\n\n\n  render() {\n    // localStorage.setItem(\"name\",\"Johny English\" )\n    // console.log(localStorage.getItem('name'))\n    // localStorage.removeItem(\"name\")\n    var SearchedDataArr = []\n      \n      this.state.data.map( (value,key) =>{\n        if( value.name.indexOf(this.state.searchedText) !== -1){\n          SearchedDataArr.push(value)\n        }\n        return true\n      }) \n\n\n\n    // console.log(SearchedDataArr);\n    return (\n      <div>\n          <Header/>\n          <div className=\"SearchForm\">\n            <div className=\"container\">\n                <div className=\"row\">\n\n                    <Search  showFormFromApp = {() => this.changeAppShowForm()}\n                       getSeachedText = {(text) => this.getSeachedText(text)}\n                       EditUserStatus = {this.state.EditStatus}\n                       changeEditUserStatus = {() => this.changeEditUserStatus()}\n                       editUserObject = {this.state.editUserObject}\n                       getEditedUserDataFromApp = {  (data) => this.getEditedUserDataFromApp(data)}\n                       />\n\n                    <TableData data = {SearchedDataArr}\n                      editFuncFromApp = { (editData) =>this.editFuncFromApp(editData) } \n                      EditUserStatus = {this.state.EditStatus}\n                      changeEditUserStatus = {() => this.changeEditUserStatus()}\n                      deleteUser = { (idUser) => this.deleteUser(idUser)}\n\n                    />\n\n                    <AddUser showForm = { this.state.showForm }\n                     getNewUser = { (name,phone,permission) => this.getNewUser(name,phone,permission)}                   \n                     />\n\n                </div>\n            </div>\n          </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}